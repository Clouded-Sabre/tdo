version: 2.1

jobs:
  build:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          name: unit test
          command: cd agent && go test
      - run:
          name: Compile the binary
          command: cd agent && ./tests/build.sh && ls build

  integration_tests:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          name: Compile the binary
          command: cd agent && ./tests/build.sh && ls build
      - run:
          name: Modify client.conf file
          command: |
            export DOCKER_NETWORK_ID=$(docker network ls --filter driver=bridge --format "{{.ID}}")
            echo "DOCKER_NETWORK_ID: $DOCKER_NETWORK_ID"
            export SUBNET=$(docker network inspect -f '{{range .IPAM.Config}}{{.Subnet}}{{end}}' "$DOCKER_NETWORK_ID")
            echo "SUBNET=$SUBNET"
            tac agent/tests/clients.conf.good | awk -v ip="$SUBNET" '/ipaddr *=/ && !changed {sub(/ipaddr *=.*/, "ipaddr = " ip); changed=1} 1' | tac > agent/tests/clients.conf
      - run:
          name: Start FreeRADIUS Docker container
          command: docker run -d --name freeradius-container -v $(pwd)/agent/tests/clients.conf:/etc/freeradius/clients.conf -v $(pwd)/agent/tests/users:/etc/freeradius/users -p 1812:1812/udp freeradius/freeradius-server:latest
      #- run:
      #    name: Find Freeradius Configuration Files
      #    command: docker exec freeradius-container find /etc/ -type f -name 'users' -o -name 'clients.conf'
      - run:
          name: Print last 5 lines of clients.conf
          command: |
            docker exec freeradius-container ls -l /etc/freeradius/ && docker exec freeradius-container tail -n 5 /etc/freeradius/clients.conf
            docker exec freeradius-container tail -n 5 /etc/freeradius/users
      - run:
          name: Prepare agent config file by using real FreeRadius IP
          command: |
            echo "FREERADIUS_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' freeradius-container)" >> $BASH_ENV && source $BASH_ENV
            cp agent/tests/config.yaml.template agent/build/config.yaml
            sed -i "s|<RADIUS_IP>|$FREERADIUS_IP|g" agent/build/config.yaml
            cat agent/build/config.yaml
      - run:
          name: Start tdo agent and run integration tests
          command: |
            pwd
            cd agent/build
            mkdir capture
            ls -l ../tests/cert/certificate.crt ../tests/cert/private.key
            sudo ss -tnlp
            ip address
            sudo ./tdo_agent_linux_amd64 &
            echo "Wait 10 seconds for the agent to be started."
            sleep 10  # Introduce a 10-second delay
            echo "Checking if HTTPS port is available"
            ss -tnlp | grep 443
            echo "Start integration tests"
            export VM_IP=127.0.0.1            
            echo "VM_IP: $VM_IP" 
            pwd && cd ../tests
            mkdir capture
            ./prepare_python.sh
            echo "integration tests completed. Clean up now ......."
            sudo pkill -2 -f tdo_agent_linux_amd64
      - run:
          name: Stop FreeRADIUS Docker container
          command: |
            echo "clean up freeradius docker container..."
            docker stop freeradius-container && docker rm freeradius-container

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: /integration\/.*/
      - integration_tests:
          filters:
            branches:
              only: /integration\/.*/  # Run only on integration branches
